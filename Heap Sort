Heap is a complete binary tree i.e tree shou;d be fi;;ed from left to right
root is always greater thann or small than its child nodes

it is used in priortising the work

heap sort implementation in c++:
void heapify(int arr[], int n , int i){
  int largest = i; // Initialize largest as root
    int l = 2 * i + 1; // left = 2*i + 1
    int r = 2 * i + 2; // right = 2*i + 2
 
    // If left child is larger than root
    if (l < n && arr[l] > arr[largest])
        largest = l;
 
    // If right child is larger than largest so far
    if (r < n && arr[r] > arr[largest])
        largest = r;
 
    // If largest is not root
    if (largest != i) {
        swap(arr[i], arr[largest]);
 
        // Recursively heapify the affected sub-tree
        heapify(arr, n, largest);
    }

}
void heapSort(){
//create heap
for(int i=0;i<n;i++){
heapify(arr, n,arr[i]);
}
//sort
for(int i=n-1;i>=0;i--){
  swap(arr[0],arr[i]);  
  heapify(arr,i,0);
}


int main(){
int arr[]={};
int n;
heapSort();
//Build a max heap from the input data. 
//now in this, max element wil always be at root, push root to ans array and down heapify again to make max heap
